/*
**             ------ IMPORTANT ------
** This file was generated by ZeroCode2 on 01/Oct/2020 22:57:26
** DO NOT MODIFY IT, as it can be regenerated at any moment.
** If you need this file changed, change the underlying model or its template.
*/

import React from 'react';
import { Formik } from 'formik';
import * as Yup from 'yup';
import { Form, SubmitBtn, Input, Textarea, Datepicker } from 'react-formik-ui'

import { IContractData } from './ContractTypes';

interface IProps {
    currentData: IContractData,
    buttonText: string;
    saveAction: (subaction: string, record: IContractData) => void
}

interface IState {
    isSubmitting: boolean;
}

class ContractDeleteForm extends React.Component<IProps, IState> {

    constructor(props: Readonly<IProps>) {
        super(props);
        this.state = { isSubmitting: false };
    }

    render() {
        return (
            <Formik
                initialValues={this.props.currentData as any}
                enableReinitialize={true}
                validationSchema={Yup.object({
                id : 
                Yup.string()
                .required('Required')
                ,
                code : 
                Yup.string()
                .max(50, 'Must be 50 characters or less')
                .required('Required')
                ,
                description : 
                Yup.string()
                ,
                status : 
                Yup.string()
                .max(50, 'Must be 50 characters or less')
                .oneOf([ 
                    'Planned', 
                    'Open', 
                    'Closed', 
                    'Cancelled', 
                ])
                ,
                startDate : 
                Yup.string()
                ,
                endDate : 
                Yup.string()
                ,
                budget : 
                Yup.number()
                ,
                contractType : 
                Yup.string()
                .max(50, 'Must be 50 characters or less')
                .oneOf([ 
                    'FixedPrice', 
                    'TandM', 
                    'QTM', 
                    'FrameContract', 
                ])
                })}
                onSubmit={(values, { setSubmitting }) => {
                    this.props.saveAction("Delete", values);
                    setSubmitting(false);
                }}
            >
                <Form mode="themed">
                    <Input name="ID" label="Unique ID" 
                    disabled />
                    <Input name="Code" label="Code" 
                    disabled />
                    <Textarea name="Description" label="Description"
                    disabled />
                    <Input name='status' label='Status'
                    disabled />
                    <Input name="Startdate" label="Startdate" 
                    disabled />
                    <Input name="Enddate" label="Enddate" 
                    disabled />
                    <Input name="budget" label="Budget" type="number" step="0.01" 
                    disabled />
                    <Input name='contractType' label='Contract type'
                    disabled />
                    <hr />
                    <SubmitBtn className="w3-button w3-light-grey w3-round" title={this.props.buttonText + "s this record"} disabled={this.state.isSubmitting}>
                        <i className="fa fa-save" ></i>&nbsp;{this.props.buttonText}
                    </SubmitBtn>
                </Form>
            </Formik>
        );
    }
};
export default ContractDeleteForm;

