/*
**             ------ IMPORTANT ------
** This file was generated by ZeroCode2 on 04/Jan/2021 22:06:05
** DO NOT MODIFY IT, as it can be regenerated at any moment.
** If you need this file changed, change the underlying model or its template.
*/

import React from 'react';
import { Formik } from 'formik';
import * as Yup from 'yup';
import { Form, Datepicker, SubmitBtn, Input, Textarea, Select } from 'react-formik-ui'
import { ISelectValue } from '../../GeneralTypes';

import { IProposalData } from './ProposalTypes';

interface IProps {
    currentData: IProposalData,
    proposalStatusvalues : ISelectValue[], 
    proposalTypevalues : ISelectValue[], 
    buttonText: string;
    saveAction: (subaction: string, record: IProposalData) => void
}

interface IState {
    isSubmitting: boolean;
}

class ProposalForm extends React.Component<IProps, IState> {

    constructor(props: Readonly<IProps>) {
        super(props);
        this.state = { isSubmitting: false };
    }

    render() {
        return (
            <Formik
                initialValues={this.props.currentData as any}
                enableReinitialize={true}
                validationSchema={Yup.object({
                    id: Yup.number()
                        .required('Required')
                    ,
                    code: Yup.string()
                        .max(50, 'Must be 50 characters or less')
                        .required('Required')
                    ,
                    title: Yup.string()
                        .max(100, 'Must be 100 characters or less')
                        .required('Required')
                    ,
                    description: Yup.string()
                    ,
                    startDate: Yup.date()
                    ,
                    endDate: Yup.date()
                    ,
                    proposalStatus: Yup.string()
                        .max(50, 'Must be 50 characters or less')
                        .required('Required')
                        .oneOf([
                        'Planned',
                        'Open',
                        'Closed',
                        'Cancelled',
                        ])
                    ,
                    proposalType: Yup.string()
                        .max(50, 'Must be 50 characters or less')
                        .required('Required')
                        .oneOf([
                        'FixedPrice',
                        'TandM',
                        'QTM',
                        'FrameContract',
                        ])
                })}
                onSubmit={(values, { setSubmitting }) => {
                    this.props.saveAction("", values);
                    setSubmitting(false);
                }}
            >
                <Form mode="themed">
                <Input name='id' label='ID' disabled />
                <Input name='code' label='Code'  />
                <Textarea name='title' label='Title'  />
                <Textarea name='description' label='Description'  />
                <Datepicker name='startDate' label='Start date'  />
                <Datepicker name='endDate' label='End date'  />
                <Select name='proposalStatus' label='Status' options={this.props.proposalStatusvalues} />
                <Select name='proposalType' label='Proposal type' options={this.props.proposalTypevalues} />
                    <hr />
                    <SubmitBtn className="w3-button w3-light-grey w3-round" title={this.props.buttonText + "s this record"} disabled={this.state.isSubmitting}>
                        <i className="fa fa-save" ></i>&nbsp;{this.props.buttonText}
                    </SubmitBtn>
                </Form>
            </Formik>
        );
    }
};
export default ProposalForm;

