%Loop:Models
%FileOverwrite:Models\=<$>.cs
%Log:Model =<$>
/*
**             ------ IMPORTANT ------
** This file was generated by ZeroCode2 on =<DateStamp>
** DO NOT MODIFY IT, as it can be regenerated at any moment.
** If you need this file changed, change the underlying model or its template.
*/
using Newtonsoft.Json;
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Linq;
using System.Threading.Tasks;

namespace =<#Parameters.msNameSpace>=<Microservice.Namespace>api.Models
{

%Loop:Properties
%If:Values?
    public enum =<$>
    {
%Loop:Values
    =<$> %If:HasMore , %EndIf

%/Loop:Values        
    }
%EndIf
%/Loop:Properties

    public class =<Name> 
    {
%Loop:Properties
%If:Key?
        [Key]
%EndIf
%If:Nullable=false
        [Required]
%EndIf
%If:Length?!=unlimited
        [StringLength(=<Length>)]
%EndIf
%If:Format?
        [DisplayFormat(DataFormatString = "{0:=<Format>}")]
%EndIf
%If:Values?
        [EnumDataType(typeof(=<$>))]
        public =<$> =<$> { get; set; } %If:Default? = =<Default>; %EndIf
%Else
        public =<Type> =<$> { get; set; } %If:Default? = =<Default>; %EndIf
%EndIf

%/Loop:Properties

        // Default model properties
        [DisplayFormat(DataFormatString = "{0:dd/MMM/yyyy}")]
        public DateTime CreatedOn { get; set; } = DateTime.Now;

        public string CreatedBy { get; set; }

        [DisplayFormat(DataFormatString = "{0:dd/MMM/yyyy}")]
        public DateTime UpdatedOn { get; set; } = DateTime.Now;

        public string UpdatedBy { get; set; }

%Loop:Children
        public %If:Lazy? virtual %EndIf List<=<$>> =<SetName> { get; private set; } = new List<=<$>>();
%/Loop:Children

    }
}

%Loop:Children
%If:!Lazy?=true

%Loop:$
%If:Values?
    public enum =<$>
    {
%Loop:Values
    =<$> %If:HasMore , %EndIf

%/Loop:Values        
    }
%EndIf
%/Loop:$

    public class =<$> 
    {
%Loop:$
%If:Type?
%If:Key?
        [Key]
%EndIf
%If:Nullable=false
        [Required]
%EndIf
%If:Length?!=unlimited
        [StringLength(=<Length>)]
%EndIf
%If:Format?
        [DisplayFormat(DataFormatString = "{0:=<Format>}")]
%EndIf
%If:Values?
        [EnumDataType(typeof(=<$>))]
        public =<$> =<$> { get; set; } %If:Default? = =<Default>; %EndIf
%Else
        public =<Type> =<$> { get; set; } %If:Default? = =<Default>; %EndIf
%EndIf

%EndIf
%/Loop:$

        // Default model properties
        [DisplayFormat(DataFormatString = "{0:dd/MMM/yyyy}")]
        public DateTime CreatedOn { get; set; } = DateTime.Now;

        public string CreatedBy { get; set; }

        [DisplayFormat(DataFormatString = "{0:dd/MMM/yyyy}")]
        public DateTime UpdatedOn { get; set; } = DateTime.Now;

        public string UpdatedBy { get; set; }

    }
%EndIf
%/Loop:Children

%/File

%/Loop:Models